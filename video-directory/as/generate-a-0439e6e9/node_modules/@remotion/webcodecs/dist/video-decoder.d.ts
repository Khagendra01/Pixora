import type { MediaParserLogLevel, MediaParserVideoSample } from '@remotion/media-parser';
import type { WebCodecsController } from './webcodecs-controller';
export type WebCodecsVideoDecoder = {
    decode: (videoSample: MediaParserVideoSample | EncodedVideoChunk) => void;
    close: () => void;
    flush: () => Promise<void>;
    waitForFinish: () => Promise<void>;
    waitForQueueToBeLessThan: (items: number) => Promise<void>;
};
export declare const internalCreateVideoDecoder: ({ onFrame, onError, controller, config, logLevel, }: {
    onFrame: (frame: VideoFrame) => Promise<void> | void;
    onError: (error: Error) => void;
    controller: WebCodecsController | null;
    config: VideoDecoderConfig;
    logLevel: MediaParserLogLevel;
}) => WebCodecsVideoDecoder;
export declare const createVideoDecoder: ({ onFrame, onError, controller, track, logLevel, }: {
    track: VideoDecoderConfig;
    onFrame: (frame: VideoFrame) => Promise<void> | void;
    onError: (error: Error) => void;
    controller?: WebCodecsController;
    logLevel?: MediaParserLogLevel;
}) => WebCodecsVideoDecoder;
